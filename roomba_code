#include "ros/ros.h"
#include <math.h>
#include "geometry_msgs/Twist.h"
#include "std_msgs/String.h"
#include <time.h>


/**
 * This tutorial demonstrates simple sending of velocity commands to the IRobot Create in Gazebo.
   Some of the code was taken from: http://guitarpenguin.is-programmer.com/posts/58100.html
   by, Harsh Patel
   Date: 07/25/2015

 */

int main(int argc, char **argv)
{
  /* initialize random seed: */
  srand (time(NULL)); 

  double radConverter = M_PI/180;
  double currDeg = 0.0;


  ros::init(argc, argv, "CreateController");

  ros::NodeHandle n;

  double sec = ros::Time::now().toSec();

  ros::Publisher vel_pub = n.advertise<geometry_msgs::Twist>("/cmd_vel", 1);

  ros::Rate loop_rate(5);
 
  // setting the last check time.
  ros::Time lastChecked_5 = ros::Time::now();
  ros::Time lastChecked_20 = ros::Time::now();

  while (ros::ok())
  {
    // to write messages
    geometry_msgs::Twist cmd_vel;

    // printing to console.
    ROS_INFO("Current time  : %f",ros::Time::now().toSec());
    // as we cross the 5 sec mark..
    if(ros::Time::now().toSec() - lastChecked_5.toSec() >= 5.0)
    {
      // stop moving
      cmd_vel.linear.x = 0;
      // get a random number between 0 - 20
      currDeg = rand() * 21.0;
      // conver to radians
      currDeg *= radConverter;
      // spin
      cmd_vel.angular.z = currDeg;
      // reset.
      currDeg = 0.0;
      lastChecked_5 = ros::Time::now();   
    }
    else if (ros::Time::now().toSec() - lastChecked_20.toSec() >= 20.0)
    {
      // stop moving
      cmd_vel.linear.x = 0;
      // get a random number between 0 - 45
      currDeg = rand() * 46.0;
      // conver to radians
      currDeg *= radConverter;
      // spin
      cmd_vel.angular.z = currDeg;
      // reset.
      currDeg = 0.0;
      lastChecked_20 = ros::Time::now();   
    }
    else
    {
      // keep moving straight.
      cmd_vel.linear.x = 1;
      cmd_vel.angular.z = 0;
    }

    vel_pub.publish(cmd_vel);

    ros::spinOnce();

    loop_rate.sleep();
  }

  return 0;
}
